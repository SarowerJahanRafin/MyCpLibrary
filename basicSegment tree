const int maxNode = 1e5 + 9;
struct ST
{
#define lc (n << 1)
#define rc ((n << 1) + 1)
    long long t[4 * maxNode];
    ST()
    {
        memset(t, 0, sizeof(t));
    }
    inline void pull(int n)
    {
        t[n] = t[lc] + t[rc];
    }
    inline long long combine(long long a, long long b)
    {
        return a + b;
    }
    void build(int n, int b, int e)
    {
        if (b == e)
        {
            t[n] = 0;
            return;
        }
        int mid = (b + e) >> 1;
        build(lc, b, mid);
        build(rc, mid + 1, e);
        pull(n);
    }
    void upd(int n, int b, int e, int i, int x)
    {
        if (b > i or e < i)
            return;
        if (b == e and b == i)
        {
            t[n] = x;
            return;
        }
        int mid = (b + e) >> 1;
        upd(lc, b, mid, i, x);
        upd(rc, mid + 1, e, i, x);
        pull(n);
    }
    long long query(int n, int b, int e, int i, int j)
    {
        if (b > j or e < i)
            return 0;
        if (b >= i and e <= j)
            return t[n];
        int mid = (b + e) >> 1;
        return combine(query(lc, b, mid, i, j), query(rc, mid + 1, e, i, j));
    }
};
