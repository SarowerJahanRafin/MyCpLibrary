// https://cses.fi/problemset/task/1651/

#include <bits/stdc++.h>
using namespace std;
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;

template <typename T>
using oset = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;
#define endl "\n";
typedef long long ll;
typedef vector<int> vi;

const int N = 2e5 + 9;
struct BIT
{
    long long M[N], A[N];
    BIT()
    {
        memset(M, 0, sizeof M);
        memset(A, 0, sizeof A);
    }
    void update(int i, long long mul, long long add)
    {
        while (i < N)
        {
            M[i] += mul;
            A[i] += add;
            i |= (i + 1);
        }
    }
    void upd(int l, int r, long long x)
    {
        update(l, x, -x * (l - 1));
        update(r, -x, x * r);
    }
    long long query(int i)
    {
        long long mul = 0, add = 0;
        int st = i;
        while (i >= 0)
        {
            mul += M[i];
            add += A[i];
            i = (i & (i + 1)) - 1;
        }
        return (mul * st + add);
    }
    long long query(int l, int r)
    {
        return query(r) - query(l - 1);
    }
} t;

void solve()
{
    int n, q;
    cin >> n >> q;
    int a[n + 2];
    for (int i = 1; i <= n; i++)
    {
        cin >> a[i];
        t.upd(i, i, a[i]);
    }

    while (q--)
    {
        int type;
        cin >> type;
        if (type == 1)
        {
            int l, r, x;
            cin >> l >> r >> x;
            t.upd(l, r, x);
        }
        else
        {
            int x;
            cin >> x;
            cout << t.query(x, x) << endl;
        }
    }
}

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    int t = 1, cs = 1;
    // cin >> t;
    while (t--)
    {
        // cout<<"Case "<<cs++<<": ";
        solve();
    }
    return 0;
}
